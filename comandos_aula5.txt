    1  hostory
    2  history
    3  claear
    4  clear
    5  git config -- global user.name "Luzdalis Lopez"
    6  git config --global user.name 'Luzdalis Lopez'
    7  git config --global user.email 'lopezluzdalis@gmail.com'
    8  git config --global user.name
    9  ls
   10  cd Desktop
   11  mkdir Repositorio_Git
   12  cd Repositorio_Git
   13  git init
   14  git status
   15  echo 'Aprendiendo a usar Versionamiento en Git' > texto.txt
   16  git status
   17  git add texto.txt
   18  git status
   19  echo 'Aprendiendo Git' > readme.md
   20  git status
   21  git add readme.md
   22  git status
   23  git commit -m 'Primer Commit'
   24  git status
   25  echo 'linea uno en readme' >> readme.md
   26  git status
   27  echo 'Luzdalis Lopez' > Participante.txt
   28  git status
   29  git add.
   30  git add .
   31  git status
   32  git restore --staged .
   33  gif status
   34  git status
   35  git add .
   36  git status
   37  git status
   38  claer
   39  git init
   40  ls
   41  cd Desktop
   42  ls
   43  cd Repositorio_Git
   44  ls
   45  git status
   46  cat texto.txt
   47  echo 'Practicando los comandos Git' >> texto.txt
   48  git status
   49  git add texto.txt
   50  git satus
   51  git status
   52  git commit -m "Modificando o arquivo TEXTO.txt" 
   53  git status
   54  git log
   55  ls
   56  git checkout HEAD~
   57  git status
   58  git log --pretty=oneline
   59  git checkout master
   60  git log --pretty=oneline
   61  git checkout HEAD~~
   62  git log --pretty=oneline
   63  git log
   64  git status
   65  ls
   66  cat > readme.md
   67  cat readme.md
   68  git status
   69  git add readme.md
   70  git status
   71  git reset --hard HEAD~
   72  git log
   73  git checkout master
   74  git log
   75  ls
   76  cat readme.md
   77  mkdir Arq_oculto.gitignore
   78  ls
   79  touch texto2.gitignore
   80  ls
   81  git rm --cached texto2.gitingore
   82  git rm --cached texto2.gitignore
   83  ls
   84  git rm --cached texto2.gitignore
   85  git restore -- staged .
   86  ls
   87  git rm --cached texto2.gitignore
   88  cat texto2.gitignore
   89  echo 'Sera um arquivo oculto!' > texto2.gitignore
   90  cat texto2.gitignore
   91  git status
   92  git rm --cached texto2.gitignore
   93  rm texto2.gitignore
   94  ls
   95  mkdir prueba
   96  ls
   97  mr Arq_oculto.gitignore
   98  rm Arq_oculto.gitignore
   99  rm -r Arq_oculto.gitignore
  100  ls
  101  echo '.prueba/' > .gitignore 
  102  ls
  103  cat prueba
  104  cd prueba
  105  ls
  106  cd ..
  107  ls
  108  ls -a
  109  ls
  110  rm -r .gitignore
  111  ls
  112  ls -a
  113  rm prueba
  114  rm -r prueba
  115  ls
  116  mkdir .prueba
  117  ls
  118  ls -a
  119  cd .prueba
  120  touch config.txt
  121  cd..
  122  cd ~
  123  ls
  124  Desktop
  125  cd Repositorio_Git
  126  cd Desktop
  127  ls
  128  cd Repositorio_Git
  129  ls
  130  ls -a
  131  cat .prueba
  132  cd .prueba
  133  ls
  134  cat config.txt
  135  cd Repositorio_Git
  136  cd ..
  137  ls
  138  ls -a 
  139  ls .prueba
  140  git status
  141  echo '.prueba/' > .gitignore
  142  git status
  143  touch pessoal.txt
  144  git status
  145  echo 'pessoal.txt' >> .gitignore
  146  git status
  147  git add .
  148  git status
  149  git commit -m 'Creacion de directorio e arquivo oculto'
  150  git status
  151  git log
  152  history
  153  history > historico.txt
  154  git status
  155  cat historico.txt
  156  git add historico.txt
  157  git commit -m 'Guardando historial de comandos utilizados'
  158  git status
  159  git log --pretty=oneline
  160  ls
  161  git branch
  162  git checkout -b feature
  163  git branch
  164  touch nova_feature
  165  git status
  166  git add nova_feature
  167  git commit -m 'Adicionando uma nova feature'
  168  git status
  169  git log
  170  git checkout master
  171  git status
  172  git log
  173  touch continuando_master
  174  git add continuando_master
  175  git commit -m 'Adicionando Continuacion na master'
  176  git status
  177  git log
  178  git checkout feature
  179  git log
  180  git checkout -b feature2 master
  181  git log
  182  git branch -d feature2
  183  git checkout master
  184  git branch -d feature2
  185  git log
  186  git checkout feture2
  187  ls
  188  cd Desktop
  189  ls
  190  cd Repositorio_Git
  191  ls
  192  git log
  193  git checkout feature
  194  git log
  195  git log --pretty=oneline --graph
  196  git merge master
  197  git log
  198  git log --pretty=oneline --graph
  199  git reset --hard HEAD~
  200  git log --pretty=oneline --graph
  201  git rebase master
  202  git log --pretty=oneline --graph
  203  history
  204  history > comandos_aula5.txt
